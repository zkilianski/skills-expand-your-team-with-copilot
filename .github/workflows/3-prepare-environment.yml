name: Step 3

on:
  pull_request:
    branches:
      - main
    paths:
      - ".github/**"

permissions:
  contents: read
  actions: write
  issues: write

env:
  STEP_4_FILE: ".github/steps/4-play-time.md"

jobs:
  find_exercise:
    name: Find Exercise Issue
    uses: skills/exercise-toolkit/.github/workflows/find-exercise-issue.yml@v0.4.0

  check_step_work:
    name: Check step work
    runs-on: ubuntu-latest
    needs: [find_exercise]
    env:
      ISSUE_URL: ${{ needs.find_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get response templates
        uses: actions/checkout@v4
        with:
          repository: skills/exercise-toolkit
          path: exercise-toolkit
          ref: v0.6.0

      - name: Update comment - checking work
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file exercise-toolkit/markdown-templates/step-feedback/checking-work.md \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # START: Check practical exercise

      - name: Check file changes
        id: changed-files
        uses: tj-actions/changed-files@v46.0.5

      - name: Check copilot-instructions.md
        id: check-instructions
        uses: actions/github-script@v6
        continue-on-error: true
        with:
          script: |
            const changedFiles = '${{ steps.changed-files.outputs.all_changed_files }}'.split(' ');
            let message = '';

            if (!changedFiles.includes('.github/copilot-instructions.md')) {
              message = 'You need to provide instructions in .github/copilot-instructions.md file';
              core.setOutput('STEP_MESSAGE', message);
              core.setFailed('The .github/copilot-instructions.md file was not modified');
              return;
            }

            message = 'Provided instructions in `.github/copilot-instructions.md`';
            core.setOutput('STEP_MESSAGE', message);

      - name: Check copilot-setup-steps.yml
        id: check-setup-steps
        uses: actions/github-script@v6
        continue-on-error: true
        with:
          script: |
            const changedFiles = '${{ steps.changed-files.outputs.all_changed_files }}'.split(' ');
            let message = '';

            if (!changedFiles.includes('.github/workflows/copilot-setup-steps.yml')) {
              message = 'You need to setup copilot-setup-steps.yml workflow';
              core.setOutput('STEP_MESSAGE', message);
              core.setFailed('The `copilot-setup-steps.yml` file was not modified');
              return;
            }

            message = 'You setup the copilot-setup-steps.yml workflow';
            core.setOutput('STEP_MESSAGE', message);

      - name: Build message - step results
        id: build-message-step-results
        uses: skills/action-text-variables@v2
        with:
          template-file: exercise-toolkit/markdown-templates/step-feedback/step-results-table.md
          template-vars: |
            step_number: 3
            passed: ${{ !contains(steps.*.outcome, 'failure') }}
            results_table:
              - description: ${{ steps.check-instructions.outputs.STEP_MESSAGE }}
                passed: ${{ steps.check-instructions.outcome == 'success' }}
              - description: ${{ steps.check-setup-steps.outputs.STEP_MESSAGE }}
                passed: ${{ steps.check-setup-steps.outcome == 'success' }}

      - name: Create comment - step results
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "$COMMENT_BODY" \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMENT_BODY: ${{ steps.build-message-step-results.outputs.updated-text }}

      # END: Check practical exercise

      - name: Fail job if not all checks passed
        if: contains(steps.*.outcome, 'failure')
        run: exit 1

      - name: Build message - step finished
        id: build-message-step-finish
        uses: skills/action-text-variables@v2
        with:
          template-file: exercise-toolkit/markdown-templates/step-feedback/step-finished-prepare-next-step.md
          template-vars: |
            next_step_number: 4

      - name: Add comment - step finished
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "$ISSUE_BODY"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_BODY: ${{ steps.build-message-step-finish.outputs.updated-text }}

  post_next_step_content:
    name: Post next step content
    needs: [find_exercise, check_step_work]
    runs-on: ubuntu-latest
    env:
      ISSUE_URL: ${{ needs.find_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get response templates
        uses: actions/checkout@v4
        with:
          repository: skills/exercise-toolkit
          path: exercise-toolkit
          ref: v0.6.0

      - name: Create comment - add step content
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file "$STEP_4_FILE"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create comment - watching for progress
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file exercise-toolkit/markdown-templates/step-feedback/watching-for-progress.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Disable current workflow and enable next one
        run: |
          gh workflow disable "Step 3" || true
          gh workflow enable "Step 4" || true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
